#!/bin/bash

# Universal package installer helper
hardn_logging_is_installed() {
    command -v "$1" &>/dev/null
}

# Check and install rsyslog and logrotate if necessary
hardn_logging_install_packages() {
        HARDN_STATUS "info" "Checking and installing logging packages (rsyslog, logrotate)..."

        # Determine package manager once
        local pkg_manager=""
        for pm in apt-get dnf yum; do
            if hardn_logging_is_installed "$pm"; then
                pkg_manager="$pm"
                break
            fi
        done

        # Exit if no supported package manager found
        if [[ -z "$pkg_manager" ]]; then
            HARDN_STATUS "error" "No supported package manager found (apt-get, dnf, yum)."
            return 1
        fi

        # Update package lists if using apt-get
        [[ "$pkg_manager" == "apt-get" ]] && sudo apt-get update >/dev/null 2>&1

        # Install packages if needed
        for pkg in rsyslog logrotate; do
            if ! hardn_logging_is_installed "$pkg"; then
                HARDN_STATUS "info" "Installing $pkg using $pkg_manager..."
                sudo "$pkg_manager" install -y "$pkg" >/dev/null 2>&1 || {
                    HARDN_STATUS "error" "Failed to install $pkg."
                    return 1
                }
            fi
        done

        HARDN_STATUS "pass" "Logging packages are installed."
        return 0
}

hardn_logging_setup_directories() {
        HARDN_STATUS "info" "Creating log directories and files..."

        local log_dir="/usr/local/var/log/suricata"
        local log_file="$log_dir/hardn-xdr.log"

        mkdir -p "$log_dir"
        touch "$log_file"
        chmod 640 "$log_file"
        chown root:adm "$log_file"

        HARDN_STATUS "pass" "Log directory $log_dir created and permissions set."
        return 0
}

hardn_logging_configure_rsyslog() {
    HARDN_STATUS "info" "Creating rsyslog configuration file /etc/rsyslog.d/30-hardn-xdr.conf..."

    cat > /etc/rsyslog.d/30-hardn-xdr.conf << 'EOF'
# HARDN-XDR Central Logging Configuration
# This file is automatically generated by HARDN-XDR.
# Any manual changes may be overwritten.

# Create a template for security logs
$template HARDNFormat,"%TIMESTAMP% %HOSTNAME% %syslogtag%%msg%\n"

# Define the central log file path
local5.* /usr/local/var/log/suricata/hardn-xdr.log;HARDNFormat

# Specific rules to route logs to local5 facility if they don't use it by default
# Suricata (often uses local5, but explicit rule ensures it)
if $programname == 'suricata' then local5.*
# AIDE
if $programname == 'aide' then local5.*
# Fail2Ban
if $programname == 'fail2ban' then local5.*
# AppArmor
if $programname == 'apparmor' then local5.*
# Auditd/SELinux (auditd logs via auditd, setroubleshoot logs via setroubleshoot)
if $programname == 'audit' or $programname == 'setroubleshoot' then local5.*
# RKHunter (often logs with tag rkhunter)
if $programname == 'rkhunter' or $syslogtag contains 'rkhunter' then local5.*
# Debsums (piped to logger, tag might be debsums or CRON)
if $programname == 'debsums' or $syslogtag contains 'debsums' then local5.*
# Lynis (cronjob logs via logger, tag might be lynis or CRON)
if $programname == 'lynis' or $syslogtag contains 'lynis' then local5.*

# Stop processing these messages after they are sent to the central log
& stop
EOF
    chmod 644 /etc/rsyslog.d/30-hardn-xdr.conf
    HARDN_STATUS "pass" "Rsyslog configuration created/updated."
    return 0
}

# Restart rsyslog service
hardn_logging_restart_rsyslog() {
    if systemctl is-active --quiet rsyslog; then
        HARDN_STATUS "info" "Restarting rsyslog service..."
        sudo systemctl restart rsyslog
        HARDN_STATUS "pass" "Rsyslog service restarted."
    else
        HARDN_STATUS "warning" "Rsyslog service not running. Configuration will be applied on next start."
    fi
    return 0
}

# Configure logrotate for the central log
hardn_logging_configure_logrotate() {
    HARDN_STATUS "info" "Creating logrotate configuration file /etc/logrotate.d/hardn-xdr..."

    cat > /etc/logrotate.d/hardn-xdr << 'EOF'
/usr/local/var/log/suricata/hardn-xdr.log {
    daily
    rotate 30
    compress
    delaycompress
    missingok
    notifempty
    create 640 root adm
    postrotate
        # Ensure rsyslog reloads its configuration or reopens log files
        # Use the standard rsyslog-rotate script if available, otherwise restart
        if [ -x /usr/lib/rsyslog/rsyslog-rotate ]; then
            /usr/lib/rsyslog/rsyslog-rotate
        else
            systemctl reload rsyslog >/dev/null 2>&1 || true
        fi
    endscript
    # Add a prerotate script to ensure the file exists and has correct permissions before rotation
    prerotate
        if [ ! -f /usr/local/var/log/suricata/hardn-xdr.log ]; then
            mkdir -p /usr/local/var/log/suricata
            touch /usr/local/var/log/suricata/hardn-xdr.log
        fi
        chmod 640 /usr/local/var/log/suricata/hardn-xdr.log
        chown root:adm /usr/local/var/log/suricata/hardn-xdr.log
    endscript
}
EOF
    chmod 644 /etc/logrotate.d/hardn-xdr
    HARDN_STATUS "pass" "Logrotate configuration created/updated."
    return 0
}

# Create symlink for easier access
hardn_logging_create_symlink() {
        HARDN_STATUS "info" "Creating symlink /var/log/hardn-xdr.log..."
        ln -sf /usr/local/var/log/suricata/hardn-xdr.log /var/log/hardn-xdr.log
        HARDN_STATUS "pass" "Symlink created at /var/log/hardn-xdr.log."
        return 0
}

# Main function to setup central logging
hardn_setup_central_logging() {
        HARDN_STATUS "info" "Setting up central logging for security tools..."

        if ! hardn_logging_install_packages; then
            HARDN_STATUS "error" "Failed to install essential logging packages. Skipping central logging configuration."
            return 1
        fi

        hardn_logging_setup_directories
        hardn_logging_configure_rsyslog
        hardn_logging_restart_rsyslog
        hardn_logging_configure_logrotate
        hardn_logging_create_symlink

        HARDN_STATUS "pass" "Central logging setup complete. All security logs will be collected in /usr/local/var/log/suricata/hardn-xdr.log"
        return 0
}
