###################################### auditd
HARDN_STATUS "info" "Configuring auditd..."
if dpkg -s auditd >/dev/null 2>&1; then
	HARDN_STATUS "pass" "auditd package is installed."
	if systemctl list-unit-files --type=service | grep -q '^auditd\.service'; then
		HARDN_STATUS "info" "Enabling and starting auditd service..."
		systemctl enable auditd >/dev/null 2>&1
		systemctl start auditd >/dev/null 2>&1
		if systemctl is-active --quiet auditd; then
			HARDN_STATUS "pass" "auditd service enabled and started."
		else
			HARDN_STATUS "warning" "Warning: Failed to start auditd service."
		fi
	else
		HARDN_STATUS "warning" "Warning: auditd.service not found, skipping service enable/start."
	fi
	# Enable auditing via auditctl 
	if command -v auditctl >/dev/null 2>&1; then
		HARDN_STATUS "info" "Attempting to enable auditd system via auditctl..."
		if auditctl -e 1 >/dev/null 2>&1; then
			HARDN_STATUS "pass" "auditd system enabled successfully via auditctl."
		else
			HARDN_STATUS "error" "Failed to enable auditd system via auditctl. Check auditd status and configuration."
		fi
	else
		HARDN_STATUS "warning" "Warning: auditctl command not found. Cannot verify/enable audit system status."
	fi
	# Configure specific audit rules (/etc/audit/audit.rules) based on STIG
	HARDN_STATUS "info" "Configuring optimized auditd rules based on STIG..."
	audit_rules_file="/etc/audit/audit.rules"
	if [ -f "$audit_rules_file" ]; then
		cp "$audit_rules_file" "${audit_rules_file}.bak.$(date +%F-%T)" 2>/dev/null || true
		HARDN_STATUS "pass" "Backed up existing audit rules to $audit_rules_file.bak."
	fi
	cat > "$audit_rules_file" << 'EOF'
# This file is automatically generated by HARDN-XDR for STIG compliance.
# Any manual changes may be overwritten.
# 
# Note: This configuration has been optimized to reduce system impact while
# maintaining essential security monitoring. Removed overly strict rules that
# could cause performance degradation or excessive logging.

# Remove any existing rules
-D

# Increase the buffers to absorb a larger burst of events
-b 8192

# Set failure mode to syslog
-f 1

# Audit system startup and shutdown
-w /sbin/init -p x -k system-lifecycle
-w /sbin/reboot -p x -k system-lifecycle
-w /sbin/halt -p x -k system-lifecycle
-w /sbin/poweroff -p x -k system-lifecycle
-w /usr/sbin/shutdown -p x -k system-lifecycle

# Audit account, group, and authentication database changes
-w /etc/passwd -p wa -k identity
-w /etc/shadow -p wa -k identity
-w /etc/group -p wa -k identity
-w /etc/gshadow -p wa -k identity
-w /etc/security/opasswd -p wa -k identity
-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-info
-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-info

# Audit changes to system configuration files
-w /etc/sysconfig/ -p wa -k system-config
-w /etc/default/ -p wa -k system-config
-w /etc/security/ -p wa -k system-config
-w /etc/pam.d/ -p wa -k system-config
-w /etc/login.defs -p wa -k system-config
-w /etc/bashrc -p wa -k system-config
-w /etc/profile -p wa -k system-config
-w /etc/csh.cshrc -p wa -k system-config
-w /etc/csh.login -p wa -k system-config
-w /etc/crontab -p wa -k system-config
-w /etc/at.allow -p wa -k system-config
-w /etc/at.deny -p wa -k system-config
-w /etc/cron.allow -p wa -k system-config
-w /etc/cron.deny -p wa -k system-config
-w /etc/cron.d/ -p wa -k system-config
-w /etc/cron.hourly/ -p wa -k system-config
-w /etc/cron.daily/ -p wa -k system-config
-w /etc/cron.weekly/ -p wa -k system-config
-w /etc/cron.monthly/ -p wa -k system-config
-w /etc/anacrontab -p wa -k system-config
-w /var/spool/cron/crontabs/ -p wa -k system-config
-w /etc/sysctl.conf -p wa -k system-config
-w /etc/modprobe.d/ -p wa -k system-config
-w /etc/apt/sources.list -p wa -k system-config
-w /etc/apt/sources.list.d/ -p wa -k system-config
-w /etc/resolv.conf -p wa -k system-config
-w /etc/hosts -p wa -k system-config
-w /etc/network/interfaces -p wa -k system-config
-w /etc/fstab -p wa -k system-config

# Audit module loading and unloading
-w /sbin/insmod -p x -k modules
-w /sbin/rmmod -p x -k modules
-w /sbin/modprobe -p x -k modules
-a always,exit -F arch=b64 -S init_module -S delete_module -k modules
-a always,exit -F arch=b32 -S init_module -S delete_module -k modules

# Audit login/logout and session information
-w /var/log/faillog -p wa -k logins
-w /var/log/lastlog -p wa -k logins
-w /var/log/tallylog -p wa -k logins
-w /var/run/utmp -p wa -k session
-w /var/log/wtmp -p wa -k session
-w /var/log/btmp -p wa -k session

# Audit privilege escalation (sudo, su)
-w /usr/bin/sudo -p x -k privilege-escalation
-w /usr/bin/su -p x -k privilege-escalation

# Audit changes to audit configuration
-w /etc/audit/auditd.conf -p wa -k audit-config
-w /etc/audit/audit.rules -p wa -k audit-config

# Audit use of privileged commands (specific, not broad directory monitoring)
-w /bin/mount -p x -k privileged-command
-w /bin/umount -p x -k privileged-command
-w /usr/bin/passwd -p x -k privileged-command
-w /usr/bin/chsh -p x -k privileged-command
-w /usr/bin/gpasswd -p x -k privileged-command

# Audit critical file deletions by user (focused on critical files)
-a always,exit -F arch=b64 -S unlink,unlinkat,rename,renameat -F dir=/etc -F auid>=1000 -F auid!=unset -k config-file-delete
-a always,exit -F arch=b32 -S unlink,unlinkat,rename,renameat -F dir=/etc -F auid>=1000 -F auid!=unset -k config-file-delete

# Audit system time changes
-a always,exit -F arch=b64 -S adjtimex,settimeofday,clock_settime -k time-change
-a always,exit -F arch=b32 -S adjtimex,settimeofday,clock_settime -k time-change
-w /etc/localtime -p wa -k time-change

# Audit network configuration changes (simplified)
-a always,exit -F arch=b64 -S sethostname,setdomainname -k network-config
-a always,exit -F arch=b32 -S sethostname,setdomainname -k network-config
-w /etc/sysconfig/network -p wa -k network-config
-w /etc/sysconfig/network-scripts/ -p wa -k network-config

# Audit mount and unmount operations
-a always,exit -F arch=b64 -S mount,umount,umount2 -k mounts
-a always,exit -F arch=b32 -S mount,umount,umount2 -k mounts

# Audit use of the ptrace syscall (debugging/tracing)
-a always,exit -F arch=b64 -S ptrace -k ptrace
-a always,exit -F arch=b32 -S ptrace -k ptrace

# Audit use of the setuid/setgid/setresuid/setresgid syscalls
-a always,exit -F arch=b64 -S setuid,setgid,setresuid,setresgid -k user-id-change
-a always,exit -F arch=b32 -S setuid,setgid,setresuid,setresgid -k user-id-change

# Audit chroot operations
-a always,exit -F arch=b64 -S chroot -k chroot
-a always,exit -F arch=b32 -S chroot -k chroot

# Audit system lifecycle operations
-a always,exit -F arch=b64 -S reboot -k system-lifecycle
-a always,exit -F arch=b32 -S reboot -k system-lifecycle

# Audit namespace operations (containerization security)
-a always,exit -F arch=b64 -S setns,unshare -k namespaces
-a always,exit -F arch=b32 -S setns,unshare -k namespaces

# Audit final immutable rule
-e 2
EOF
	# END OF RULESET

	# Load the new rules
	HARDN_STATUS "info" "Loading new auditd rules..."
	if auditctl -R "$audit_rules_file" >/dev/null 2>&1; then
		HARDN_STATUS "pass" "New auditd rules loaded successfully."
	else
		HARDN_STATUS "error" "Failed to load new auditd rules. Check the rules file for syntax errors."
	fi

else
	HARDN_STATUS "warning" "Warning: auditd is not installed (checked with dpkg -s). Skipping configuration."
	HARDN_STATUS "warning" "Please ensure auditd is listed in ../../progs.csv for installation."
fi
HARDN_STATUS "pass" "auditd configuration attempt completed."



