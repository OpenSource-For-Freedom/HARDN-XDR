name: Test HARDN with Conda

on:
  push:
    branches:
      - 'Dev-Testing'
  pull_request:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 1' # Every Monday at midnight UTC

jobs:
  test:
    runs-on: ubuntu-latest

    steps:  
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: 3.11

      - name: Install Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 3.11
          activate-environment: test-env
          environment-file: environment.yml

      - name: Verify flake8 installation
        run: |
          source activate test-env
          conda install -y flake8
          flake8 --version

      - name: Lint with flake8
        run: |
          source activate test-env
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Verify pytest installation
        run: |
          source activate test-env
          conda install -y pytest
          pytest --version

      - name: Run Python tests with pytest
        run: |
          source activate test-env
          export PYTHONPATH=$PYTHONPATH:$(pwd)/src
          pytest -v src/tests src/gui

      - name: Run Shell Script Tests
        run: |
          echo "Testing shell scripts..."
          for script in $(find setup -name "*.sh" -o -name "*.bash"); do
            echo "Running $script..."
            bash -n "$script" || exit 1
            echo "$script passed syntax check."
          done

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Run Rust Tests
        run: |
          echo "Testing Rust scripts..."
          cd src
          cargo test --verbose