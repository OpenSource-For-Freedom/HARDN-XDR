name: "Security Overwatch"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '23 15 * * 2'

jobs:
  security-checks:
    name: Run Security Scans
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    container:
      image: debian:latest 
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Dependencies
      run: |
        echo "Installing dependencies..."
        apt update && apt install -y shellcheck python3-pip
        python3 -m pip install --upgrade pip
        pip install pylint bandit trufflehog

    - name: Run Security Scanning Bash Script
      run: |
        # Exit immediately if a command exits with a non-zero status
        set -e

        echo "Running linting..."
        find . -type f -name "*.sh" -exec shellcheck {} \\;
        find . -type f -name "*.py" -exec pylint {} \\;

        echo "Running secret scanning..."
        trufflehog filesystem --path ./ --json

        echo "Running security flaw scanning..."
        bandit -r .

        echo "All checks completed successfully!"

    - name: Create or Update Weekly Issue
      run: |
        echo "Setting up GitHub CLI..."
        apt update && apt install -y gh
        gh auth login --with-token <<< "$GITHUB_TOKEN"

        echo "Checking for existing issue..."
        ISSUE_TITLE="Weekly Security Scan Results"
        ISSUE_BODY="This issue contains the results of the weekly security scans."
        EXISTING_ISSUE=$(gh issue list --search "$ISSUE_TITLE" --json number | jq -r '.[0].number')

        if [ "$EXISTING_ISSUE" != "null" ]; then
          echo "Updating existing issue..."
          gh issue comment "$EXISTING_ISSUE" --body "Updated results:\n$(cat scan_results.txt)"
        else
          echo "Creating new issue..."
          gh issue create --title "$ISSUE_TITLE" --body "$ISSUE_BODY"
        fi