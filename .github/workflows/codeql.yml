name: "Security Overwatch"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '23 15 * * 2'

jobs:
  security-checks:
    name: Run ShellCheck Security Scans
    runs-on: ubuntu-latest
    container:
      image: debian:latest # Use a Debian container
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Install ShellCheck
      run: |
        echo "Installing ShellCheck..."
        apt update && apt install -y shellcheck

    - name: Run ShellCheck on Shell Scripts
      run: |
        echo "Running ShellCheck..."
        mkdir -p scan_results
        for script in $(find . -type f -name "*.sh"); do
          echo "Scanning $script"
          sanitized_name=$(echo "$script" | sed 's/\//_/g')
          shellcheck "$script" > "scan_results/$sanitized_name.txt" || true
        done
        echo "ShellCheck completed. Results stored in scan_results/"

    - name: Install Git
      run: |
        echo "Installing Git..."
        apt update && apt install -y git

    - name: Configure Safe Directory
      run: |
        echo "Configuring Git safe directory..."
        git config --global --add safe.directory /__w/HARDN-XDR/HARDN-XDR

    - name: Initialize Git Repository
      run: |
        echo "Initializing Git repository..."
        git init
        git remote add origin $GITHUB_SERVER_URL/$GITHUB_REPOSITORY
        echo "Fetching remote history..."
        git fetch origin
        echo "Cleaning up untracked files..."
        git clean -fdx || true
        echo "Checking out the main branch..."
        git checkout -t origin/main

    - name: Create New Branch
      run: |
        TIMESTAMP=$(date +'%Y%m%d-%H%M%S')
        BRANCH_NAME="shellcheck-fixes-$TIMESTAMP"
        echo "Creating new branch: $BRANCH_NAME"
        git checkout -b "$BRANCH_NAME"

    - name: Commit and Push Fixes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "Committing fixes..."
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "actions@github.com"
        if [ -d "scan_results" ] && [ "$(ls -A scan_results)" ]; then
          git add scan_results/
          git commit -m "Apply Security fixes"
          TIMESTAMP=$(date +'%Y%m%d-%H%M%S')
          BRANCH_NAME="shellcheck-fixes-$TIMESTAMP"
          echo "Pushing branch: $BRANCH_NAME"
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }} "$BRANCH_NAME"
        else
          echo "No files to commit in scan_results/ directory."
        fi

    - name: Install GitHub CLI
      run: |
        echo "Installing GitHub CLI..."
        apt update && apt install -y gh
        echo "Verifying GitHub CLI installation..."
        gh --version

    - name: Create Pull Request
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        TIMESTAMP=$(date +'%Y%m%d-%H%M%S')
        BRANCH_NAME="shellcheck-fixes-$TIMESTAMP"
        echo "Creating pull request for branch: $BRANCH_NAME"
        gh pr create --title "ShellCheck Fixes" --body "This pull request contains fixes for issues identified during the ShellCheck scan." --base main --head "$BRANCH_NAME"