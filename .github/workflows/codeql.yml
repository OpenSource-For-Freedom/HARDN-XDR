name: "Security Overwatch"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '23 15 * * 2'

jobs:
  security-checks:
    name: Run ShellCheck Security Scans
    runs-on: ubuntu-latest
    container:
      image: debian:latest # Use a Debian container
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Install ShellCheck
      run: |
        echo "Installing ShellCheck..."
        apt update && apt install -y shellcheck

    - name: Run ShellCheck on Shell Scripts
      run: |
        echo "Running ShellCheck..."
        mkdir -p scan_results
        for script in $(find . -type f -name "*.sh"); do
          echo "Scanning $script"
          shellcheck "$script" > "scan_results/${script//\//_}.txt" || true
        done
        echo "ShellCheck completed. Results stored in scan_results/"

    - name: Create or Update Weekly Issue
      run: |
        echo "Setting up GitHub CLI..."
        apt update && apt install -y gh
        gh auth login --with-token <<< "$GITHUB_TOKEN"

        echo "Checking for existing issue..."
        ISSUE_TITLE="Weekly ShellCheck Findings"
        ISSUE_BODY="This issue contains the results of the weekly ShellCheck scans."
        EXISTING_ISSUE=$(gh issue list --search "$ISSUE_TITLE" --json number | jq -r '.[0].number')

        if [ "$EXISTING_ISSUE" != "null" ]; then
          echo "Updating existing issue..."
          RESULTS=$(cat scan_results/*.txt)
          gh issue comment "$EXISTING_ISSUE" --body "Updated results:\n\`\`\`\n$RESULTS\n\`\`\`"
        else
          echo "Creating new issue..."
          RESULTS=$(cat scan_results/*.txt)
          gh issue create --title "$ISSUE_TITLE" --body "$ISSUE_BODY\n\`\`\`\n$RESULTS\n\`\`\`"