name: "Security Overwatch"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '23 15 * * 2'

jobs:
  shellcheck-scan:
    name: ShellCheck Scanning and Logging
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Install Dependencies
      run: |
        echo "Installing ShellCheck and GitHub CLI..."
        apt update && apt install -y shellcheck git gh

    - name: Run ShellCheck on Shell Scripts
      run: |
        echo "Running ShellCheck..."
        mkdir -p shellcheck_logs
        for script in $(find src/setup -type f -name "*.sh"); do
          echo "Scanning $script"
          sanitized_name=$(echo "$script" | sed 's/\\//_/g')
          shellcheck "$script" > "shellcheck_logs/$sanitized_name.log" || true
        done
        echo "ShellCheck completed. Logs stored in shellcheck_logs/"

    - name: Upload Logs
      uses: actions/upload-artifact@v3
      with:
        name: shellcheck-logs
        path: shellcheck_logs/

  submit-issue:
    name: Submit Issue
    needs: shellcheck-scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Download Logs
      uses: actions/download-artifact@v3
      with:
        name: shellcheck-logs

    - name: Create Issue
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "Creating GitHub Issue..."
        ISSUE_TITLE="ShellCheck Fixes Needed"
        ISSUE_BODY="ShellCheck has identified issues in the following scripts:\n\n"
        for log in shellcheck_logs/*.log; do
          ISSUE_BODY="$ISSUE_BODY$(basename "$log"):\n$(cat "$log")\n\n"
        done
        echo -e "$ISSUE_BODY" > issue_body.txt
        gh issue create --title "$ISSUE_TITLE" --body-file issue_body.txt