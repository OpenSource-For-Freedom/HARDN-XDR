name: "Security Overwatch"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '23 15 * * 2'

jobs:
  security-checks:
    name: Run ShellCheck Security Scans and Create Artifact
    runs-on: ubuntu-latest
    container:
      image: ubuntu:latest # Use an Ubuntu container
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Install ShellCheck
      run: |
        echo "Installing ShellCheck..."
        apt update && apt install -y shellcheck

    - name: Run ShellCheck on Shell Scripts
      run: |
        echo "Running ShellCheck..."
        mkdir -p fixed_files
        for script in $(find src/setup -type f -name "*.sh"); do
          echo "Scanning $script"
          sanitized_name=$(echo "$script" | sed 's/\//_/g')
          shellcheck --format=diff "$script" > "fixed_files/$sanitized_name.diff" || true
        done
        echo "ShellCheck completed. Fixed files stored in fixed_files/"

    - name: Upload Fixed Files as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: fixed-files
        path: fixed_files/

  create-pull-request:
    name: Create Pull Request with Fixed Files
    needs: security-checks
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: fixed-files

    - name: Apply Fixes to Repository
      run: |
        echo "Applying fixes..."
        for patch in fixed_files/*.diff; do
          patch -p1 < "$patch" || true
        done
        git config --global user.name "GitHub Actions Bot"
        git config --global user.email "actions@github.com"
        BRANCH_NAME="shell-fix"
        if git show-ref --quiet refs/heads/$BRANCH_NAME; then
          echo "Branch $BRANCH_NAME exists. Switching to it..."
          git checkout $BRANCH_NAME
        else
          echo "Branch $BRANCH_NAME does not exist. Creating it..."
          git checkout -b $BRANCH_NAME
        fi
        echo "Committing changes..."
        git add .
        git commit -m "ShellCheck fixes applied"
        echo "Pushing branch: $BRANCH_NAME"
        git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} $BRANCH_NAME || true

    - name: Create Pull Request
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        BRANCH_NAME="shell-fix"
        echo "Creating new pull request..."
        gh pr create --title "ShellCheck Fixes" --body "This pull request contains fixes for issues identified by ShellCheck." --base main --head "$BRANCH_NAME"