name: Build and Release Debian Package

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  bump-version:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.bump.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest v1.1.x tag
        id: get_tag
        run: |
          latest_tag=$(git tag -l "v1.1.*" --sort=-v:refname | head -n 1)
          if [ -z "$latest_tag" ]; then latest_tag="v1.1.0"; fi
          echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT

      - name: Bump patch version
        id: bump
        run: |
          tag="${{ steps.get_tag.outputs.latest_tag }}"
          patch=$(echo "$tag" | sed 's/.*\.//')
          new_patch=$((patch + 1))
          new_tag="v1.1.$new_patch"
          echo "new_tag=$new_tag"
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

  build-and-release:
    needs: bump-version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Install build dependencies
        run: sudo apt-get update && sudo apt-get install -y dpkg-dev debhelper fakeroot build-essential devscripts

      - name: Inject version + arch into control if needed
        run: |
          echo "Using version: ${{ needs.bump-version.outputs.new_tag }}"

      - name: Build Debian package
        run: |
          export DEB_BUILD_ARCH=${{ matrix.arch }}
          dpkg-buildpackage -us -uc

      - name: Rename .deb with version and arch
        id: rename
        run: |
          full_tag="${{ needs.bump-version.outputs.new_tag }}"
          version="${full_tag#v}"  # remove leading 'v'
          arch="${{ matrix.arch }}"
          deb_file=$(ls ../*.deb | head -n 1)
          new_name="hardn_${version}_${arch}.deb"
          mv "$deb_file" "../$new_name"
          echo "deb_out=../$new_name" >> $GITHUB_OUTPUT

      - name: Upload GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.bump-version.outputs.new_tag }}
          name: "Release ${{ needs.bump-version.outputs.new_tag }}"
          body: "Automated release for version ${{ needs.bump-version.outputs.new_tag }}"
          files: "${{ steps.rename.outputs.deb_out }}"

      - name: Push Git tag only if build succeeds
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "${{ needs.bump-version.outputs.new_tag }}" -m "Release ${{ needs.bump-version.outputs.new_tag }}"
          git push origin "${{ needs.bump-version.outputs.new_tag }}"
