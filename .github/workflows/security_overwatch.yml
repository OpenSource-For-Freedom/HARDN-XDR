name: "Bash Security Scanning"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 3 * * 7' # Weekly scan on Sundays

jobs:
  bash-security-scan:
    name: Bash Security Scanning
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Install Dependencies
      run: |
        echo "Installing ShellCheck and shfmt..."
        sudo apt update && sudo apt install -y shellcheck
        curl -sSL https://github.com/mvdan/sh/releases/download/v3.5.1/shfmt_v3.5.1_linux_amd64 -o shfmt
        chmod +x shfmt
        sudo mv shfmt /usr/local/bin/

    - name: Run ShellCheck on Bash Scripts
      run: |
        echo "Running ShellCheck..."
        mkdir -p shellcheck_logs
        for script in $(find src/setup -type f -name "*.sh"); do
          echo "Scanning $script"
          sanitized_name=$(echo "$script" | sed 's/\\//_/g')
          shellcheck "$script" > "shellcheck_logs/$sanitized_name.log" || true
        done
        echo "ShellCheck completed. Logs stored in shellcheck_logs/"

    - name: Format Scripts with shfmt
      run: |
        echo "Formatting scripts with shfmt..."
        mkdir -p shfmt_logs
        for script in $(find src/setup -type f -name "*.sh"); do
          echo "Formatting $script"
          shfmt -w "$script" > "shfmt_logs/$(basename "$script").log" || true
        done
        echo "shfmt completed. Logs stored in shfmt_logs/"

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: bash-security-logs
        path: |
          shellcheck_logs/
          shfmt_logs/

    - name: Create Issue for Security Findings
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "Creating GitHub Issue for Security Findings..."
        ISSUE_TITLE="Bash Security Findings"
        ISSUE_BODY="ShellCheck and shfmt have identified issues in the Bash scripts:\n\n"
        for log in shellcheck_logs/*.log; do
          ISSUE_BODY="$ISSUE_BODY$(basename "$log") - ShellCheck Findings:\n$(cat "$log")\n\n"
        done
        for log in shfmt_logs/*.log; do
          ISSUE_BODY="$ISSUE_BODY$(basename "$log") - shfmt Findings:\n$(cat "$log")\n\n"
        done
        echo -e "$ISSUE_BODY" > issue_body.txt
        gh issue create --title "$ISSUE_TITLE" --body-file issue_body.txt